/* ----------------  Define breakpoints ---------------- */
$breakpoints: (
  "small": 540px,
  // Mobile devices
  "medium": 768px,
  // Tablets
  "large": 1024px,
  // Small desktops
);

/** ----Â  for responsive design ---- **/
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// Breakpoints
$breakpoint-mobile: 540px;
$breakpoint-tablet: 820px;
$breakpoint-desktop: 1024px;

// Mixins for responsive design
@mixin mobile {
  @media (max-width: #{$breakpoint-mobile}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$breakpoint-mobile + 1}) and (max-width: #{$breakpoint-tablet}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-tablet + 1}) {
    @content;
  }
}
/* ----------------  Display Flex variables ---------------- */
@mixin flex-cross-center {
  display: flex;
  align-items: center;
}

@mixin flex-all-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}
/* ----------------  Display Grid variables ---------------- */

@mixin grid-container {
  position: relative;
  display: grid;
  max-width: 100vw;
  height: auto;
  border: $border-primary;
  grid-auto-flow: row;
  box-sizing: border-box;
}
@mixin grid-box {
  display: grid;
  width: 100%;
  height: 100%;
  border: $border-primary;
}

@mixin grid-right-bottom {
  align-self: end;
  justify-self: end;
  padding: 0.5em;
}

@mixin grid-col-2x1 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: 100%;
}

@mixin grid-row-1x2 {
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: 100%;
}

@mixin grid-item($area) {
  grid-area: $area;
}

@mixin grid-position($position) {
  @if $position != null {
    grid-area: nth($position, 1) /
      nth($position, 2) /
      span
      nth($position, 3) /
      span
      nth($position, 4);
  } @else {
    display: none;
  }
}

/* ----------------  Common Element ---------------- */
@mixin stripe {
  display: block;
  width: 100%;
  height: 1px;
  background-color: $color-border;
}

@mixin overlay {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

@mixin fixed-nav-back {
  position: fixed;
  background: linear-gradient(
    to right,
    hsla(220, 13%, 0%, 0.3) 40%,
    rgba(0, 0, 0, 0) 80%
  );
  z-index: 999;
  pointer-events: all;
}

@mixin small-circle {
  position: absolute;
  width: clamp(1em, 1.5vw, 1.5em);
  height: clamp(1em, 1.5vw, 1.5em);
  background-color: $color-light;
  border-radius: 50%;
}
